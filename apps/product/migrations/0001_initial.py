# Generated by Django 4.1.7 on 2023-03-24 19:33

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EcommerceProductTemplate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Satete')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Creation date')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='write date')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Deleted date')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Name')),
                ('sku', models.CharField(max_length=150, unique=True, verbose_name='SKU')),
                ('price', models.FloatField(verbose_name='Price')),
                ('description', models.TextField(verbose_name='Descripción de Producto')),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/', verbose_name='Product image')),
                ('height', models.FloatField(verbose_name='High')),
                ('length', models.FloatField(verbose_name='Length')),
                ('width', models.FloatField(verbose_name='width')),
                ('reward_value', models.IntegerField(verbose_name='Reward value')),
                ('manufacturer_code', models.CharField(max_length=150, verbose_name='Manufacture code')),
                ('modal_type', models.CharField(max_length=150, verbose_name='Modal type')),
                ('commercial_condition_id', models.IntegerField(verbose_name='Condition of the commercial Id')),
                ('unit_multiplier', models.IntegerField(verbose_name='Unit multiplier')),
                ('kit_itens_sell_apart', models.BooleanField(verbose_name='Can be sale alone')),
                ('is_active', models.BooleanField(verbose_name='Activate')),
                ('is_activate_if_possible', models.BooleanField(verbose_name='Activate if is possible')),
                ('ref_id', models.CharField(max_length=150, verbose_name='Reference')),
                ('vtex_id', models.CharField(max_length=150, verbose_name='Vtex ID')),
                ('brand', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.ecommercebrand', verbose_name='Brand')),
                ('category_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.ecommercecategory', verbose_name='Category')),
                ('measure_unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.ecommercemeasureunit', verbose_name='MeasureUnit')),
                ('warehouse', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.ecommercewarehouse', verbose_name='Warehouse')),
            ],
            options={
                'verbose_name': 'Product template',
                'verbose_name_plural': 'Product templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EcommerceProductProduct',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Satete')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Creation date')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='write date')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Deleted date')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Name')),
                ('sku', models.CharField(max_length=150, unique=True, verbose_name='SKU')),
                ('price', models.FloatField(verbose_name='Price')),
                ('description', models.TextField(verbose_name='Descripción de Producto')),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/', verbose_name='Product image')),
                ('height', models.FloatField(verbose_name='High')),
                ('length', models.FloatField(verbose_name='Length')),
                ('width', models.FloatField(verbose_name='width')),
                ('reward_value', models.IntegerField(verbose_name='Reward value')),
                ('manufacturer_code', models.CharField(max_length=150, verbose_name='Manufacture code')),
                ('modal_type', models.CharField(max_length=150, verbose_name='Modal type')),
                ('commercial_condition_id', models.IntegerField(verbose_name='Condition of the commercial Id')),
                ('unit_multiplier', models.IntegerField(verbose_name='Unit multiplier')),
                ('kit_itens_sell_apart', models.BooleanField(verbose_name='Can be sale alone')),
                ('is_active', models.BooleanField(verbose_name='Activate')),
                ('is_activate_if_possible', models.BooleanField(verbose_name='Activate if is possible')),
                ('ref_id', models.CharField(max_length=150, verbose_name='Reference')),
                ('vtex_id', models.CharField(max_length=150, verbose_name='Vtex ID')),
                ('brand', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.ecommercebrand', verbose_name='Brand')),
                ('category_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.ecommercecategory', verbose_name='Category')),
                ('measure_unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.ecommercemeasureunit', verbose_name='MeasureUnit')),
                ('product_template', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='product.ecommerceproducttemplate', verbose_name='Product template')),
                ('warehouse', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.ecommercewarehouse', verbose_name='Warehouse')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EcommerceProductContent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Satete')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Creation date')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='write date')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Deleted date')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Name')),
                ('name_sku', models.CharField(max_length=150, verbose_name='Name sku')),
                ('platform', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.ecommercehub', verbose_name='Platform')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='product.ecommerceproductproduct', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Content',
                'verbose_name_plural': 'Contents',
                'ordering': ['name'],
            },
        ),
    ]
